// Code generated by "stringer -type TagType -trimprefix TagType"; DO NOT EDIT.

package rls

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TagTypeWhitespace-0]
	_ = x[TagTypeDelim-1]
	_ = x[TagTypeText-2]
	_ = x[TagTypePlatform-3]
	_ = x[TagTypeArch-4]
	_ = x[TagTypeSource-5]
	_ = x[TagTypeResolution-6]
	_ = x[TagTypeCollection-7]
	_ = x[TagTypeDate-8]
	_ = x[TagTypeSeries-9]
	_ = x[TagTypeVersion-10]
	_ = x[TagTypeDisc-11]
	_ = x[TagTypeCodec-12]
	_ = x[TagTypeHDR-13]
	_ = x[TagTypeAudio-14]
	_ = x[TagTypeChannels-15]
	_ = x[TagTypeOther-16]
	_ = x[TagTypeCut-17]
	_ = x[TagTypeEdition-18]
	_ = x[TagTypeLanguage-19]
	_ = x[TagTypeSize-20]
	_ = x[TagTypeRegion-21]
	_ = x[TagTypeContainer-22]
	_ = x[TagTypeGenre-23]
	_ = x[TagTypeID-24]
	_ = x[TagTypeGroup-25]
	_ = x[TagTypeMeta-26]
	_ = x[TagTypeExt-27]
}

const _TagType_name = "WhitespaceDelimTextPlatformArchSourceResolutionCollectionDateSeriesVersionDiscCodecHDRAudioChannelsOtherCutEditionLanguageSizeRegionContainerGenreIDGroupMetaExt"

var _TagType_index = [...]uint8{0, 10, 15, 19, 27, 31, 37, 47, 57, 61, 67, 74, 78, 83, 86, 91, 99, 104, 107, 114, 122, 126, 132, 141, 146, 148, 153, 157, 160}

func (i TagType) String() string {
	if i < 0 || i >= TagType(len(_TagType_index)-1) {
		return "TagType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TagType_name[_TagType_index[i]:_TagType_index[i+1]]
}
